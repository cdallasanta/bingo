{"version":3,"sources":["stamps/fingernail.png","stamps/heart.png","stamps/shamrock.png","stamps/star.png","stamps/wine.png","constants/index.js","components/gamesList.js","components/smallCard.js","components/gameWebSocket.js","stamps/stamps.js","components/card.js","components/game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","API_ROOT","HEADERS","Accept","GamesList","state","games","componentDidMount","fetch","then","res","json","setState","handleReceivedGame","response","game","some","g","id","createGame","method","headers","resp","props","history","push","showGames","map","i","date","Date","created_at","toDateString","key","to","className","onClick","this","React","Component","SmallCard","showGrid","ready","checked","col","cell","user","GameWebSocket","fetchGame","CableApp","cable","subscriptions","create","channel","gameId","received","updatedGame","updateState","stamps","shamrock","wine","fingernail","star","heart","Card","board","card","j","data-col","data-row","e","clickCell","target","style","backgroundImage","value","type","onChange","handleInputChange","saveCard","body","JSON","stringify","row","dataset","newBoard","targetCell","newChecked","alertBox","Game","game_id","match","params","drawn_numbers","most_recent_num","cards","newUser","data","createCard","alert","showCards","pathname","showNumbers","reverse","num","char","Math","floor","drawNumber","NUMS","Array","keys","filter","n","includes","random","length","cardId","card_id","onSubmit","placeholder","disabled","margin","href","location","find","c","parseInt","App","path","render","component","Boolean","window","hostname","actionCable","createConsumer","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cc38b06a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fingernail.5af66b61.png\";","module.exports = __webpack_public_path__ + \"static/media/heart.da1a1de0.png\";","module.exports = __webpack_public_path__ + \"static/media/shamrock.8339d0f7.png\";","module.exports = __webpack_public_path__ + \"static/media/star.e250142b.png\";","module.exports = __webpack_public_path__ + \"static/media/wine.9215e1d6.png\";","export const API_ROOT = \"https://bingo-bango-bongo.herokuapp.com/api\"\nexport const API_WS_ROOT = \"wss://bingo-bango-bongo.herokuapp.com/cable\"\n// export const API_ROOT = \"http://localhost:3001/api\"\n// export const API_WS_ROOT = \"ws://localhost:3001/cable\"\nexport const HEADERS = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json'\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { API_ROOT, HEADERS } from '../constants';\n\nclass GamesList extends React.Component {\n  state = {\n    games: []\n  }\n\n  componentDidMount = () => {\n    fetch(`${API_ROOT}/games`)\n      .then(res => res.json())\n      .then(games => this.setState({games}))\n  }\n\n  handleReceivedGame = response => {\n    const {game} = response;\n    if (!this.state.games.some(g => g.id === game.id)) {\n      this.setState({\n        games: [...this.state.games, game]\n      })\n    }\n  }\n\n  createGame = () => {\n    fetch(`${API_ROOT}/games`, {\n      method: 'POST',\n      headers: HEADERS\n    }).then(resp => resp.json())\n      .then(game => this.props.history.push(`/games/${game.id}`))\n  }\n\n  showGames = () =>{\n    return this.state.games.map((game, i) => {\n      const date = new Date(game.created_at).toDateString()\n      return <li key={i}><Link key={i} to={`/games/${game.id}`}>{date}</Link></li>\n    })\n  }\n\n  render(){\n    return (\n    <div className=\"gamesList\">\n      <button onClick={this.createGame}>New Game</button>\n      <h2>Games</h2>\n      <ul>\n        {this.showGames()}\n      </ul>\n    </div>\n    )\n  }\n}\n\nexport default GamesList;","import React, { Component } from 'react'\nimport '../stylesheets/smallCard.css'\n\nexport class SmallCard extends Component {\n  showGrid = () => {\n    return <div className={`small-grid ${this.props.ready ? \"ready\" : \"not-ready\"}`}>\n      {this.props.checked.map((col, i) => {\n        return <div key={i} className=\"small-column\"> {\n          col.map((cell, i) => {\n            return <div key={i} className={`small-cell${cell === 1 ? \" checked\" : \"\"}`} />\n          })\n        }</div>\n      })}\n    </div>\n  }\n\n  render() {\n    return (\n      <div className=\"card-div\">\n        {this.props.user}:\n        {this.showGrid()}\n      </div>\n    )\n  }\n}\n\nexport default SmallCard\n","import React, { Component } from 'react';\n\nexport class GameWebSocket extends Component {\n  componentDidMount() {\n    this.props.fetchGame()\n    this.props.CableApp.game = this.props.CableApp.cable.subscriptions.create({\n      channel: 'GamesChannel',\n      game: this.props.gameId\n    },\n    {\n      received: (updatedGame) => {\n        this.props.updateState(updatedGame)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n\nexport default GameWebSocket;\n","import fingernail from './fingernail.png';\nimport heart from './heart.png';\nimport shamrock from './shamrock.png';\nimport star from './star.png';\nimport wine from './wine.png';\n\nconst stamps = [shamrock, wine, fingernail, star, heart]\nexport default stamps;","import React from 'react';\nimport '../stylesheets/card.css';\nimport { API_ROOT, HEADERS } from '../constants';\nimport stamps from '../stamps/stamps';\n\nclass Card extends React.Component {\n  state = {\n    board: this.props.card.board\n  }\n\n  showGrid = () => {\n    return <div className=\"large-grid\">\n      <div id=\"card-header\">\n        <div id=\"b-header\" className=\"header-cell\">B</div>\n        <div id=\"i-header\" className=\"header-cell\">I</div>\n        <div id=\"n-header\" className=\"header-cell\">N</div>\n        <div id=\"g-header\" className=\"header-cell\">G</div>\n        <div id=\"o-header\" className=\"header-cell\">O</div>\n      </div>\n      \n      <div id=\"card-numbers\">\n        {this.props.card.board.map((col, i) => {\n          return <div key={i} className=\"column\"> \n            {\n            col.map((cell, j) => {\n              return <div key={j}\n                className={`large-cell${this.props.card.checked[i][j] ? \" checked\" : \"\"}`}\n                data-col={i}\n                data-row={j}\n                onClick={e => this.clickCell(e.target)}\n                style={{backgroundImage: `${this.props.card.checked[i][j] ? \"url(\"+ stamps[j] + \")\" : \"none\"}`}}>\n                  { this.props.card.ready || ( i === 2 && j === 2 )?\n                    cell\n                    : (<input value={this.state.board[i][j]}\n                      type=\"number\"\n                      className=\"card-cell-input\"\n                      onChange={this.handleInputChange}\n                      data-col={i}\n                      data-row={j} \n                    />)\n                  }\n              </div>\n            })\n          }</div>\n        })}\n      </div>\n    </div>\n  }\n\n  saveCard = () => {\n    fetch(`${API_ROOT}/cards/${this.props.card.id}`, {\n      method: 'PATCH',\n      headers: HEADERS,\n      body: JSON.stringify({card: {id: this.props.card.id, board: this.state.board}})\n    })\n  }\n\n  handleInputChange = e => {\n    const row = e.target.dataset.row;\n    const col = e.target.dataset.col;\n    \n    let newBoard = [...this.state.board];\n    newBoard[col][row] = e.target.value;\n    \n    this.setState({\n      board: newBoard\n    });\n  }\n\n  clickCell = targetCell => {\n    if (this.props.card.ready){\n      const row = targetCell.dataset.row;\n      const col = targetCell.dataset.col;\n      if (this.props.card.checked[col][row]) {\n        targetCell.style.backgroundImage = 'none';\n      } else {\n        targetCell.style.backgroundImage = `url('${stamps[targetCell.dataset.row]}')`;\n      }\n\n      let newChecked = [...this.props.card.checked]\n      newChecked[col][row] = this.props.card.checked[col][row] === 0 ? 1 : 0\n\n      fetch(`${API_ROOT}/cards/${this.props.card.id}`, {\n        method: 'PATCH',\n        headers: HEADERS,\n        body: JSON.stringify({card: {id: this.props.card.id, checked: newChecked}})\n      })\n    }\n  }\n\n  alertBox = () => {\n    return <div className=\"alert\">\n      When your numbers are how you'd like them, click \"save card\" below. Note: if you choose to change the numbers below, this program does not double check if the card is valid.\n    </div>\n  }\n  \n  render() {\n    return (\n      <div className=\"card\">\n        {this.props.card.ready ? null : this.alertBox()}\n        {this.props.card.ready ? null :\n          <button onClick={this.saveCard} >Save Card</button>\n        }\n        {this.showGrid()}\n      </div>\n    )\n  }\n}\n\nexport default Card\n","import React, { Component } from 'react';\nimport { API_ROOT, HEADERS } from '../constants';\nimport SmallCard from './smallCard';\nimport { Link } from 'react-router-dom';\nimport GameWebSocket from './gameWebSocket';\nimport Card from './card';\n\nclass Game extends Component {\n  state = {\n    game_id: this.props.match.params.game_id,\n    drawn_numbers: [],\n    most_recent_num: null,\n    cards: [],\n    newUser: \"\"\n  }\n\n  componentDidMount = () => {\n    this.fetchGame()\n  }\n\n  fetchGame = () => {\n    fetch(`${API_ROOT}/games/${this.state.game_id}`)\n      .then(resp => resp.json())\n      .then(data => this.updateState(data))\n  }\n\n  updateState = data => {\n    this.setState({\n      ...this.state,\n      ...data\n    })\n  }\n\n  createCard = () => {\n    if (this.state.newUser !== \"\"){\n      fetch(`${API_ROOT}/cards`, {\n        method: 'POST',\n        headers: HEADERS,\n        body: JSON.stringify({card: {game_id: this.state.game_id, user: this.state.newUser}})\n      })\n    } else {\n      alert(\"Please enter a name first\");\n    }\n  }\n\n  showCards = () => {\n    return this.state.cards.map((card, i) => {\n      return <Link key={i}\n        to={{pathname: `/games/${this.state.game_id}/cards/${card.id}`}}>\n          <SmallCard checked={card.checked} user={card.user} ready={card.ready} key={i} />\n        </Link>\n    })\n  }\n  \n  showNumbers = () => {\n    return this.state.drawn_numbers.reverse().map((num, i) => {\n      let char = \"BINGO\"[Math.floor(num / 15)]\n      return <div key={i}>{char} {num}</div>\n    })\n  }\n\n  drawNumber = () => {\n    const NUMS = [...Array(75).keys()].filter(n => !this.state.drawn_numbers.includes(n))\n    let num = NUMS[Math.floor(Math.random()*NUMS.length)];\n    fetch(`${API_ROOT}/games/${this.state.game_id}`, {\n      method: 'PATCH',\n      headers: HEADERS,\n      body: JSON.stringify({game: {\n        game_id: this.state.game_id,\n        drawn_numbers: [...this.state.drawn_numbers, num]}})\n      }\n    )\n  }\n\n  render(){\n    let char;\n    if (this.state.drawn_numbers) {\n      char = \"BINGO\"[Math.floor((this.state.drawn_numbers[this.state.drawn_numbers.length-1]-1) / 15)]\n    }\n    const cardId = this.props.match.params.card_id\n\n    return (\n      <div className=\"game\">\n        <div>\n          <h2>Cards</h2>\n          {cardId ? null :\n            <div id=\"new-card\">\n              <form onSubmit={this.createCard}>\n                <input value={this.state.newUser} onChange={e => this.setState({newUser: e.target.value})} placeholder=\"Player Name\" className=\"new-user\" />\n                <button type=\"submit\" disabled={this.state.drawn_numbers.length === 75}>New Card</button>\n              </form>\n            </div>\n          }\n\n          <div id=\"small-cards\">\n            {this.showCards()}\n          </div>\n        </div>\n\n        {cardId ? null : \n          <div style={{margin: \"5px\"}}>\n            Invite more players using this link: <br />\n            <a href={`https://bingo-bango-bongo.herokuapp.com${this.props.location.pathname}`}>{`https://bingo-bango-bongo.herokuapp.com${this.props.location.pathname}`}</a>\n          </div>\n        }\n\n        {this.state.cards.find(c => c.id === parseInt(cardId)) ?\n          <Card\n            card={this.state.cards.find(c => c.id === parseInt(cardId))}\n            game={this.state}\n          />\n        : null }\n\n        <div>\n          <h2>Numbers Drawn:</h2>\n          {cardId ? null : <button onClick={this.drawNumber}>Draw Number</button> }\n\n          <div id=\"numbers\">\n            <div id=\"most-recent-num\">\n              {this.state.drawn_numbers ? \n                <b>Most Recent: {char} {this.state.drawn_numbers[this.state.drawn_numbers.length-1]}</b>\n              : null }\n            </div>\n            {this.showNumbers()}\n          </div>\n        </div>\n\n        <GameWebSocket\n          CableApp={this.props.CableApp}\n          fetchGame={this.fetchGame}\n          gameId={this.props.match.params.game_id}\n          updateState={this.updateState}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Game\n","import React, {Component} from 'react';\nimport GamesList from './components/gamesList';\nimport Game from './components/game';\nimport { Route, Switch } from 'react-router-dom'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/games/:game_id/cards/:card_id\"\n            render={props => {\n              return <Game\n                {...props}\n                CableApp={this.props.CableApp}\n              />}}\n          />\n          <Route path=\"/games/:game_id\"\n            render={props => {\n              return <Game\n                {...props}\n                CableApp={this.props.CableApp}\n              />}}\n          />\n          <Route path=\"/\"\n            component={GamesList}\n          />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport actionCable from 'actioncable';\nimport { API_WS_ROOT } from './constants';\n\nconst CableApp = {}\n\nCableApp.cable = actionCable.createConsumer(API_WS_ROOT);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App CableApp={CableApp} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}