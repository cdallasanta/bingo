{"version":3,"sources":["stamps/fingernail.png","stamps/heart.png","stamps/shamrock.png","stamps/star.png","stamps/wine.png","constants/index.js","components/gamesList.js","components/smallCard.js","components/game.js","stamps/stamps.js","components/card.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","API_ROOT","HEADERS","Accept","GamesList","state","games","componentDidMount","fetch","then","res","json","setState","handleReceivedGame","response","game","some","g","id","createGame","method","headers","showGames","map","i","key","to","className","onClick","this","React","Component","SmallCard","showGrid","props","checked","col","cell","user","Game","game_id","match","params","drawn_numbers","most_recent_num","cards","newUser","fetchGame","componentWillUnmount","clearInterval","timer","resp","data","createCard","body","JSON","stringify","card","showCards","showNumbers","reverse","num","char","Math","floor","drawNumber","random","includes","setInterval","length","onSubmit","value","onChange","e","target","type","style","margin","href","location","pathname","stamps","shamrock","wine","fingernail","star","heart","Card","card_id","board","j","data-col","data-row","clickCell","backgroundImage","targetCell","row","dataset","App","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bffe69e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fingernail.5af66b61.png\";","module.exports = __webpack_public_path__ + \"static/media/heart.da1a1de0.png\";","module.exports = __webpack_public_path__ + \"static/media/shamrock.8339d0f7.png\";","module.exports = __webpack_public_path__ + \"static/media/star.e250142b.png\";","module.exports = __webpack_public_path__ + \"static/media/wine.9215e1d6.png\";","export const API_ROOT = \"https://bingo-bango-bongo.herokuapp.com/api\"\nexport const API_WS_ROOT = \"ws://localhost:3001/cable\"\nexport const HEADERS = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json'\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { API_ROOT, HEADERS } from '../constants';\n\nclass GamesList extends React.Component {\n  state = {\n    games: []\n  }\n\n  componentDidMount = () => {\n    fetch(`${API_ROOT}/games`)\n      .then(res => res.json())\n      .then(games => this.setState({games}))\n  }\n\n  handleReceivedGame = response => {\n    const {game} = response;\n    if (!this.state.games.some(g => g.id === game.id)) {\n      this.setState({\n        games: [...this.state.games, game]\n      })\n    }\n  }\n\n  createGame = () => {\n    fetch(`${API_ROOT}/games`, {\n      method: 'POST',\n      headers: HEADERS\n    })\n  }\n\n  showGames = () =>{\n    return this.state.games.map((game, i) => {\n      return <li key={i}><Link key={i} to={`/games/${game.id}`}>{game.id}</Link></li>\n    })\n  }\n\n  render(){\n    return (\n    <div className=\"gamesList\">\n      <button onClick={this.createGame}>New Game</button>\n      <h2>Games</h2>\n      <ul>\n        {this.showGames()}\n      </ul>\n    </div>\n    )\n  }\n}\n\nexport default GamesList;","import React, { Component } from 'react'\nimport '../stylesheets/smallCard.css'\n\nexport class SmallCard extends Component {\n  showGrid = () => {\n    return <div className=\"small-grid\">\n      {this.props.checked.map((col, i) => {\n        return <div key={i} className=\"column\"> {\n          col.map((cell, i) => {\n            return <div key={i} className={`small-cell${cell === 1 ? \" checked\" : \"\"}`} />\n          })\n        }</div>\n      })}\n    </div>\n  }\n\n  render() {\n    return (\n      <div className=\"card-div\">\n        {this.props.user}:\n        {this.showGrid()}\n      </div>\n    )\n  }\n}\n\nexport default SmallCard\n","import React, { Component } from 'react';\nimport { API_ROOT, HEADERS } from '../constants';\nimport SmallCard from './smallCard';\nimport { Link } from 'react-router-dom';\n\nclass Game extends Component {\n  constructor(props){\n    super(props);\n    this.timer = setInterval(() => this.fetchGame(), 3000);\n  }\n  \n  state = {\n    game_id: this.props.match.params.game_id,\n    drawn_numbers: [],\n    most_recent_num: null,\n    cards: [],\n    newUser: \"\"\n  }\n\n  componentDidMount = () => {\n    this.fetchGame()\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.timer)\n  }\n\n  fetchGame = () => {\n    fetch(`${API_ROOT}/games/${this.state.game_id}`)\n      .then(resp => resp.json())\n      .then(data => {\n        this.setState({\n          ...this.state,\n          ...data\n        })\n      })\n  }\n\n  createCard = () => {\n    fetch(`${API_ROOT}/cards`, {\n      method: 'POST',\n      headers: HEADERS,\n      body: JSON.stringify({card: {game_id: this.state.game_id, user: this.state.newUser}})\n    }).then(resp => resp.json())\n      .then(data=> this.setState({cards: [...this.state.cards, data]}))\n  }\n\n  showCards = () => {\n    return this.state.cards.map((card, i) => {\n      return <Link key={i} to={`/cards/${card.id}`}><SmallCard checked={card.checked} user={card.user} key={i} /></Link>\n    })\n  }\n  \n  showNumbers = () => {\n    return this.state.drawn_numbers.reverse().map((num, i) => {\n      let char = \"BINGO\"[Math.floor(num / 15)]\n      return <div key={i}>{char} {num}</div>\n    })\n  }\n\n  drawNumber = () => {\n    let num;\n    do {\n      num = Math.floor(Math.random()*75 + 1);\n    } while (this.state.drawn_numbers.includes(num));\n    fetch(`${API_ROOT}/games/${this.state.game_id}`, {\n      method: 'PATCH',\n      headers: HEADERS,\n      body: JSON.stringify({game: {\n        game_id: this.state.game_id,\n        drawn_numbers: [...this.state.drawn_numbers, num]}})\n      }\n    ).then(resp => resp.json())\n      .then(game => {\n        this.setState({drawn_numbers: game.drawn_numbers, most_recent_num: num})\n      })\n  }\n\n  render(){\n    let char;\n    if (this.state.drawn_numbers) {\n      char = \"BINGO\"[Math.floor(this.state.drawn_numbers[this.state.drawn_numbers.length-1] / 15)]\n    }\n    \n    return (\n      <div className=\"game\">\n        <h2>Cards</h2>\n        <div id=\"new-card\">\n          <form onSubmit={this.createCard}>\n            <input value={this.state.newUser} onChange={e => this.setState({newUser: e.target.value})} />\n            <button type=\"submit\">New Card</button>\n          </form>\n        </div>\n        <div id=\"small-cards\">\n          {this.showCards()}\n        </div>\n\n        <div style={{margin: \"5px\"}}>\n          Invite more players using this link: <br />\n          <a href={`https://bingo-bango-bongo.herokuapp.com${this.props.location.pathname}`}>{`${API_ROOT}${this.props.location.pathname}`}</a>\n        </div>\n\n        <h2>Numbers Drawn:</h2>\n        <button onClick={this.drawNumber}>Draw Number</button>\n        <div id=\"numbers\">\n          <div id=\"most-recent-num\">\n            {this.state.drawn_numbers ? \n              <b>Most Recent: {char} {this.state.drawn_numbers[this.state.drawn_numbers.length-1]}</b>\n            : null }\n          </div>\n          {this.showNumbers()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Game\n","import fingernail from './fingernail.png';\nimport heart from './heart.png';\nimport shamrock from './shamrock.png';\nimport star from './star.png';\nimport wine from './wine.png';\n\nconst stamps = [shamrock, wine, fingernail, star, heart]\nexport default stamps;","import React, { Component } from 'react';\nimport '../stylesheets/card.css';\nimport { API_ROOT, HEADERS } from '../constants';\nimport SmallCard from './smallCard';\nimport stamps from '../stamps/stamps';\n\nexport class Card extends Component {\n  constructor(props){\n    super(props);\n    this.timer = setInterval(() => this.fetchGame(), 3000);\n  }\n\n  state = {\n    id: this.props.match.params.card_id,\n    board: [[]],\n    checked: [[]],\n    game: {},\n    user: \"\"\n  }\n\n  componentDidMount = () => {\n    this.fetchGame()\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.timer)\n  }\n\n  showGrid = () => {\n    return <div className=\"large-grid\">\n      <div id=\"card-header\">\n        <div id=\"b-header\" className=\"header-cell\">B</div>\n        <div id=\"i-header\" className=\"header-cell\">I</div>\n        <div id=\"n-header\" className=\"header-cell\">N</div>\n        <div id=\"g-header\" className=\"header-cell\">G</div>\n        <div id=\"o-header\" className=\"header-cell\">O</div>\n      </div>\n      \n      <div id=\"card-numbers\">\n        {this.state.board.map((col, i) => {\n          return <div key={i} className=\"column\"> \n            {\n            col.map((cell, j) => {\n              return <div key={j}\n                className={`large-cell${this.state.checked[i][j] ? \" checked\" : \"\"}`}\n                data-col={i}\n                data-row={j}\n                onClick={e => this.clickCell(e.target)}\n                style={{backgroundImage: `${this.state.checked[i][j] ? \"url(\"+ stamps[j] + \")\" : \"none\"}`}}>{cell}\n              </div>\n            })\n          }</div>\n        })}\n      </div>\n    </div>\n  }\n\n  clickCell = targetCell => {\n    const row = targetCell.dataset.row;\n    const col = targetCell.dataset.col;\n    if (this.state.checked[col][row]) {\n      targetCell.style.backgroundImage = 'none';\n    } else {\n      targetCell.style.backgroundImage = `url('${stamps[targetCell.dataset.row]}')`;\n    }\n    let newChecked = [...this.state.checked]\n    newChecked[col][row] = this.state.checked[col][row] === 0 ? 1 : 0\n    fetch(`${API_ROOT}/cards/${this.state.id}`, {\n      method: 'PATCH',\n      headers: HEADERS,\n      body: JSON.stringify({card: {id: this.state.id, checked: this.state.checked}})\n    }).then(resp => resp.json())\n      .then(card => this.setState(card))\n  }\n\n  fetchGame = () => {\n    fetch(`${API_ROOT}/cards/${this.state.id}`)\n      .then(resp => resp.json())\n      .then(data => this.setState(data))\n  }\n\n  showCards = () => {\n    return this.state.game.cards.map((card, i) => {\n      return <SmallCard key={i} checked={card.checked} user={card.user} />\n    })\n  }\n  \n  showNumbers = () => {\n    return this.state.game.drawn_numbers.reverse().map((num, i) => {\n      let char = \"BINGO\"[Math.floor(num / 15)]\n      return <div key={i}>{char} {num}</div>\n    })\n  }\n\n  render(){\n    let char;\n    if (this.state.game.drawn_numbers) {\n      char = \"BINGO\"[Math.floor(this.state.game.drawn_numbers[this.state.game.drawn_numbers.length-1] / 15)]\n    }\n\n    return (\n      <div className=\"game\">\n        <div id=\"small-cards\">\n          {this.state.game.cards ? this.showCards() : null}\n        </div>\n\n        {this.showGrid()}\n\n        <h2>Numbers Drawn:</h2>\n        <div id=\"numbers\">\n          <div id=\"most-recent-num\">\n            {this.state.game.drawn_numbers ? \n              <b>Most Recent: {char} {this.state.game.drawn_numbers[this.state.game.drawn_numbers.length-1]}</b>\n            : null }\n          </div>\n          {this.state.game.drawn_numbers ? this.showNumbers() : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Card\n","import React, {Component} from 'react';\nimport GamesList from './components/gamesList';\nimport Game from './components/game';\nimport Card from './components/card';\nimport { Route, Switch } from 'react-router-dom'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/cards/:card_id\"\n            component={Card}\n          />\n          <Route path=\"/games/:game_id\"\n            component={Game}\n          />\n          <Route path=\"/\"\n            component={GamesList}\n          />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}